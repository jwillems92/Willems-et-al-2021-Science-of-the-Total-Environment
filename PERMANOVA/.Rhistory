rankindex(d2$Lux, d2[2:24],indices = c("euclidean", "manhattan", "gower", "altGower", "canberra", "clark", "kulczynski", "horn", "binomial", "jaccard", "bray"))
# for lux: euclidean, manhattan, gower, binomial, altGower, canberra
# for laeq: kulczynski, altGower, canberra, clark, horn, jaccard, bray
# for treatment: euclidean, manhattan, gower, binomial, jaccard
betaD1 <-vegdist(d2[2:24], method ="gower", binary=TRUE) # for Treatment model
betaD2 <-vegdist(d2[2:24], method ="altGower", binary=TRUE) # for Lux/LAeq model
leqD <- vegdist(d2$Laeq, method = "gower")
luxD <- vegdist(d2$Lux, method = "gower")
mIndexD <- vegdist(d2$mIndex, method = "gower")
JDayD <- vegdist(d2$JDay, method = "gower")
betaDv <- c(betaD2)
envD <- data.frame(c(leqD),c(luxD),c(JDayD), c(mIndexD), betaDv)
names(envD) <- c("LeqD", "LuxD", "JDayD", "MoonIndexD", "betaDdf")
betaDMod <- lm(betaDdf ~ LeqD* LuxD + JDayD + MoonIndexD, data = envD)
summary(betaDMod)
DFsdB <- ggpredict(betaDMod, terms = c("LeqD", "LuxD"), back.transform =F, type ="fe")
C1 <- plot(DFsdB, colors="eight", add.data=F)  +
labs(x="Sound difference (dB)", y ="Dissimilarity", title ="") +
theme_classic(base_size = 18) +
theme(panel.grid.minor = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(legend.position = "none") +
labs(subtitle = "(a)") +
theme(plot.subtitle = element_text(size = 20, face = "bold")) +
theme(plot.subtitle = element_text(hjust = -0.13))
C1
C1 / D1 / M1
C1 / D1 / M1
leqD <- vegdist(d2$Laeq, method = "gower")
luxD <- vegdist(d2$Lux, method = "gower")
mIndexD <- vegdist(d2$mIndex, method = "gower")
JDayD <- vegdist(d2$JDay, method = "gower")
betaDv <- c(betaD2)
envD <- data.frame(c(leqD),c(luxD),c(JDayD), c(mIndexD), betaDv)
names(envD) <- c("LeqD", "LuxD", "JDayD", "MoonIndexD", "betaDdf")
betaDMod <- lm(betaDdf ~ LeqD* LuxD + JDayD + MoonIndexD, data = envD)
summary(betaDMod)
DFsdB <- ggpredict(betaDMod, terms = c("LeqD", "LuxD"), back.transform =F, type ="fe")
C1 <- plot(DFsdB, colors="eight", add.data=F)  +
labs(x="Sound difference (dB)", y ="Dissimilarity", title ="") +
theme_classic(base_size = 18) +
theme(panel.grid.minor = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(legend.position = "none") +
labs(subtitle = "(a)") +
theme(plot.subtitle = element_text(size = 20, face = "bold")) +
theme(plot.subtitle = element_text(hjust = -0.13))
C1
leqD <- dist(d2$Laeq, method = "gower")
leqD <- vegdist(d2$Laeq, method = "altGower")
luxD <- vegdist(d2$Lux, method = "altGower")
mIndexD <- vegdist(d2$mIndex, method = "altGower")
JDayD <- vegdist(d2$JDay, method = "altGower")
betaDv <- c(betaD2)
envD <- data.frame(c(leqD),c(luxD),c(JDayD), c(mIndexD), betaDv)
names(envD) <- c("LeqD", "LuxD", "JDayD", "MoonIndexD", "betaDdf")
betaDMod <- lm(betaDdf ~ LeqD* LuxD + JDayD + MoonIndexD, data = envD)
summary(betaDMod)
DFsdB <- ggpredict(betaDMod, terms = c("LeqD", "LuxD"), back.transform =F, type ="fe")
C1 <- plot(DFsdB, colors="eight", add.data=F)  +
labs(x="Sound difference (dB)", y ="Dissimilarity", title ="") +
theme_classic(base_size = 18) +
theme(panel.grid.minor = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(legend.position = "none") +
labs(subtitle = "(a)") +
theme(plot.subtitle = element_text(size = 20, face = "bold")) +
theme(plot.subtitle = element_text(hjust = -0.13))
C1
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(vegan)
library(vegan3d)
library(multcomp)
library(lme4)
library(performance)
library(MuMIn)
library(blmeco)
library(matrixStats)
library(ecodist)
library(MASS)
library(rgl)
library(ggeffects)
library(patchwork)
options(na.action = "na.fail")
d <- read.csv("Data/CamSppBin2.csv", header=TRUE)
head(d)
# how many zeros per treatment
d_zero <- subset(d, d$rich < 1)     # Very few zeroes now, only 4 cameras
d_zero
# cameras with zero detections cannot be included
d2 <- subset(d, d$rich > 0)
# how many non zero cameras are left per treatment?
sapply(split(d2$Treatment, d2$Treatment), length) # slightly fewer cameras at combined and light treatments
rankindex(d2$Lux, d2[2:24],indices = c("euclidean", "manhattan", "gower", "altGower", "canberra", "clark", "kulczynski", "horn", "binomial", "jaccard", "bray"))
# for lux: euclidean, manhattan, gower, binomial, altGower, canberra
# for laeq: kulczynski, altGower, canberra, clark, horn, jaccard, bray
# for treatment: euclidean, manhattan, gower, binomial, jaccard
betaD1 <-vegdist(d2[2:24], method ="gower", binary=TRUE) # for Treatment model
betaD2 <-vegdist(d2[2:24], method ="altGower", binary=TRUE) # for Lux/LAeq model
leqD <- vegdist(d2$Laeq, method = "altGower")
luxD <- vegdist(d2$Lux, method = "altGower")
mIndexD <- vegdist(d2$mIndex, method = "altGower")
JDayD <- vegdist(d2$JDay, method = "altGower")
betaDv <- c(betaD2)
envD <- data.frame(c(leqD),c(luxD),c(JDayD), c(mIndexD), betaDv)
names(envD) <- c("LeqD", "LuxD", "JDayD", "MoonIndexD", "betaDdf")
betaDMod <- lm(betaDdf ~ LeqD* LuxD + JDayD + MoonIndexD, data = envD)
DFsdB <- ggpredict(betaDMod, terms = c("LeqD", "LuxD"), back.transform =F, type ="fe")
leqD <- vegdist(d2$Laeq, method = "euclidean")
luxD <- vegdist(d2$Lux, method = "euclidean")
mIndexD <- vegdist(d2$mIndex, method = "euclidean")
JDayD <- vegdist(d2$JDay, method = "euclidean")
betaDv <- c(betaD2)
envD <- data.frame(c(leqD),c(luxD),c(JDayD), c(mIndexD), betaDv)
names(envD) <- c("LeqD", "LuxD", "JDayD", "MoonIndexD", "betaDdf")
betaDMod <- lm(betaDdf ~ LeqD* LuxD + JDayD + MoonIndexD, data = envD)
summary(betaDMod)
DFsdB <- ggpredict(betaDMod, terms = c("LeqD", "LuxD"), back.transform =F, type ="fe")
C1 <- plot(DFsdB, colors="eight", add.data=F)  +
labs(x="Sound difference (dB)", y ="Dissimilarity", title ="") +
theme_classic(base_size = 18) +
theme(panel.grid.minor = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(legend.position = "none") +
labs(subtitle = "(a)") +
theme(plot.subtitle = element_text(size = 20, face = "bold")) +
theme(plot.subtitle = element_text(hjust = -0.13))
C1
DFsLux <- ggpredict(betaDMod, terms = c("LuxD", "LeqD"), back.transform =F, type ="fe")
D1 <- plot(DFsLux, colors="eight", add.data=F)  +
labs(x="Light difference (Lux)", y ="Dissimilarity", title ="") +
theme_classic(base_size = 18) +
theme(panel.grid.minor = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(legend.position = "none") +
labs(subtitle = "(b)") +
theme(plot.subtitle = element_text(size = 20, face = "bold")) +
theme(plot.subtitle = element_text(hjust = -0.13))
D1
DFsMoon <- ggpredict(betaDMod, terms = c("MoonIndexD", "LeqD"), back.transform =F, type ="fe")
M1 <- plot(DFsMoon, colors="eight", add.data=F)  +
labs(x="Moonlight difference", y ="Dissimilarity", title ="") +
theme_classic(base_size = 18) +
theme(panel.grid.minor = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(legend.position = "none") +
labs(subtitle = "(c)") +
theme(plot.subtitle = element_text(size = 20, face = "bold")) +
theme(plot.subtitle = element_text(hjust = -0.13))
M1
leqD
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(vegan)
library(vegan3d)
library(multcomp)
library(lme4)
library(performance)
library(MuMIn)
library(blmeco)
library(matrixStats)
library(ecodist)
library(MASS)
library(rgl)
library(ggeffects)
library(patchwork)
options(na.action = "na.fail")
d <- read.csv("Data/CamSppBin2.csv", header=TRUE)
head(d)
# how many zeros per treatment
d_zero <- subset(d, d$rich < 1)     # Very few zeroes now, only 4 cameras
d_zero
# cameras with zero detections cannot be included
d2 <- subset(d, d$rich > 0)
# how many non zero cameras are left per treatment?
sapply(split(d2$Treatment, d2$Treatment), length) # slightly fewer cameras at combined and light treatments
rankindex(d2$Lux, d2[2:24],indices = c("euclidean", "manhattan", "gower", "altGower", "canberra", "clark", "kulczynski", "horn", "binomial", "jaccard", "bray"))
# for lux: euclidean, manhattan, gower, binomial, altGower, canberra
# for laeq: kulczynski, altGower, canberra, clark, horn, jaccard, bray
# for treatment: euclidean, manhattan, gower, binomial, jaccard
betaD1 <-vegdist(d2[2:24], method ="gower", binary=TRUE) # for Treatment model
betaD2 <-vegdist(d2[2:24], method ="altGower", binary=TRUE) # for Lux/LAeq model
leqD <- vegdist(d2$Laeq, method = "altGower")
luxD <- vegdist(d2$Lux, method = "altGower")
mIndexD <- vegdist(d2$mIndex, method = "altGower")
JDayD <- vegdist(d2$JDay, method = "altGower")
betaDv <- c(betaD1)
envD <- data.frame(c(leqD),c(luxD),c(JDayD), c(mIndexD), betaDv)
names(envD) <- c("LeqD", "LuxD", "JDayD", "MoonIndexD", "betaDdf")
betaDMod <- lm(betaDdf ~ LeqD* LuxD + JDayD + MoonIndexD, data = envD)
leqD <- vegdist(d2$Laeq, method = "altGower")
luxD <- vegdist(d2$Lux, method = "altGower")
mIndexD <- vegdist(d2$mIndex, method = "altGower")
JDayD <- vegdist(d2$JDay, method = "altGower")
betaDv <- c(betaD1)
betaD1 <-vegdist(d2[2:24], method ="gower", binary=TRUE) # for Treatment model
betaD2 <-vegdist(d2[2:24], method ="altGower", binary=TRUE) # for Lux/LAeq model
adonis2(betaD2 ~ Lux*Laeq +
Lux +
Laeq +
mIndex +
Landcover +
JDay,
strata = d2$Cluster,
by = "margin", data = d2)
adonis2(betaD2 ~ Lux +
Laeq +
mIndex +
Landcover +
JDay,
strata = d2$Cluster,
by = "margin", data = d2)
adonis2(betaD1 ~ Treatment +
mIndex +
Landcover +
JDay,
strata = d2$Cluster,
by = "margin", data = d2)
leqD <- dist(d2$Laeq, method=altGower)
leqD <- dist(d2$Laeq, method="altGower")
leqD <- dist(d2$Laeq)
luxD <- dist(d2$Lux)
mIndexD <- dist(d2$mIndex)
JDayD <- dist(d2$JDay)
betaDv <- c(betaD1)
envD <- data.frame(c(leqD),c(luxD),c(JDayD), c(mIndexD), betaDv)
names(envD) <- c("LeqD", "LuxD", "JDayD", "MoonIndexD", "betaDdf")
betaDMod <- lm(betaDv~ LeqD* LuxD + JDayD + MoonIndexD, data = envD)
summary(betaDMod)
# Noise
DFsdB <- ggpredict(betaDMod, terms = c("LeqD", "LuxD"), back.transform =F, type ="fe")
C1 <- plot(DFsdB, colors="eight", add.data=F)  +
labs(x="Sound difference (dB)", y ="Dissimilarity", title ="") +
theme_classic(base_size = 18) +
theme(panel.grid.minor = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(legend.position = "none") +
labs(subtitle = "(a)") +
theme(plot.subtitle = element_text(size = 20, face = "bold")) +
theme(plot.subtitle = element_text(hjust = -0.13))
C1
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(vegan)
library(vegan3d)
library(multcomp)
library(lme4)
library(performance)
library(MuMIn)
library(blmeco)
library(matrixStats)
library(ecodist)
library(MASS)
library(rgl)
library(ggeffects)
library(patchwork)
options(na.action = "na.fail")
d <- read.csv("Data/CamSppBin2.csv", header=TRUE)
head(d)
# how many zeros per treatment
d_zero <- subset(d, d$rich < 1)     # Very few zeroes now, only 4 cameras
d_zero
# cameras with zero detections cannot be included
d2 <- subset(d, d$rich > 0)
# how many non zero cameras are left per treatment?
sapply(split(d2$Treatment, d2$Treatment), length) # slightly fewer cameras at combined and light treatments
rankindex(d2$Lux, d2[2:24],indices = c("euclidean", "manhattan", "gower", "altGower", "canberra", "clark", "kulczynski", "horn", "binomial", "jaccard", "bray"))
# for lux: euclidean, manhattan, gower, binomial, altGower, canberra
# for laeq: kulczynski, altGower, canberra, clark, horn, jaccard, bray
# for treatment: euclidean, manhattan, gower, binomial, jaccard
betaD1 <-vegdist(d2[2:24], method ="gower", binary=TRUE) # for Treatment model
betaD2 <-vegdist(d2[2:24], method ="altGower", binary=TRUE) # for Lux/LAeq model
leqD <- dist(d2$Laeq)
luxD <- vegdist(d2$Lux)
mIndexD <- vegdist(d2$mIndex)
JDayD <- vegdist(d2$JDay)
betaDv <- c(betaD1)
envD <- data.frame(c(leqD),c(luxD),c(JDayD), c(mIndexD), betaDv)
names(envD) <- c("LeqD", "LuxD", "JDayD", "MoonIndexD", "betaDdf")
betaDMod <- lm(betaDdf ~ LeqD* LuxD + JDayD + MoonIndexD, data = envD)
leqD <- dist(d2$Laeq)
luxD <- dist(d2$Lux)
mIndexD <- dist(d2$mIndex)
JDayD <- dist(d2$JDay)
betaDv <- c(betaD1)
envD <- data.frame(c(leqD),c(luxD),c(JDayD), c(mIndexD), betaDv)
names(envD) <- c("LeqD", "LuxD", "JDayD", "MoonIndexD", "betaDdf")
betaDMod <- lm(betaDdf ~ LeqD* LuxD + JDayD + MoonIndexD, data = envD)
summary(betaDMod)
DFsdB <- ggpredict(betaDMod, terms = c("LeqD", "LuxD"), back.transform =F, type ="fe")
C1 <- plot(DFsdB, colors="eight", add.data=F)  +
labs(x="Sound difference (dB)", y ="Dissimilarity", title ="") +
theme_classic(base_size = 18) +
theme(panel.grid.minor = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(legend.position = "none") +
labs(subtitle = "(a)") +
theme(plot.subtitle = element_text(size = 20, face = "bold")) +
theme(plot.subtitle = element_text(hjust = -0.13))
C1
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(vegan)
library(vegan3d)
library(multcomp)
library(lme4)
library(performance)
library(MuMIn)
library(blmeco)
library(matrixStats)
library(ecodist)
library(MASS)
library(rgl)
library(ggeffects)
library(patchwork)
options(na.action = "na.fail")
d <- read.csv("Data/CamSppBin2.csv", header=TRUE)
head(d)
# how many zeros per treatment
d_zero <- subset(d, d$rich < 1)     # Very few zeroes now, only 4 cameras
d_zero
# cameras with zero detections cannot be included
d2 <- subset(d, d$rich > 0)
# how many non zero cameras are left per treatment?
sapply(split(d2$Treatment, d2$Treatment), length) # slightly fewer cameras at combined and light treatments
rankindex(d2$Lux, d2[2:24],indices = c("euclidean", "manhattan", "gower", "altGower", "canberra", "clark", "kulczynski", "horn", "binomial", "jaccard", "bray"))
# for lux: euclidean, manhattan, gower, binomial, altGower, canberra
# for laeq: kulczynski, altGower, canberra, clark, horn, jaccard, bray
# for treatment: euclidean, manhattan, gower, binomial, jaccard
betaD1 <-vegdist(d2[2:24], method ="gower", binary=TRUE) # for Treatment model
betaD2 <-vegdist(d2[2:24], method ="altGower", binary=TRUE) # for Lux/LAeq model
leqD <- dist(d2$Laeq)
luxD <- dist(d2$Lux)
mIndexD <- dist(d2$mIndex)
JDayD <- dist(d2$JDay)
betaDv <- c(betaD2)
envD <- data.frame(c(leqD),c(luxD),c(JDayD), c(mIndexD), betaDv)
names(envD) <- c("LeqD", "LuxD", "JDayD", "MoonIndexD", "betaDdf")
betaDMod <- lm(betaDdf ~ LeqD* LuxD + JDayD + MoonIndexD, data = envD)
summary(betaDMod)
DFsdB <- ggpredict(betaDMod, terms = c("LeqD", "LuxD"), back.transform =F, type ="fe")
C1 <- plot(DFsdB, colors="eight", add.data=F)  +
labs(x="Sound difference (dB)", y ="Dissimilarity", title ="") +
theme_classic(base_size = 18) +
theme(panel.grid.minor = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(legend.position = "none") +
labs(subtitle = "(a)") +
theme(plot.subtitle = element_text(size = 20, face = "bold")) +
theme(plot.subtitle = element_text(hjust = -0.13))
C1
DFsLux <- ggpredict(betaDMod, terms = c("LuxD", "LeqD"), back.transform =F, type ="fe")
D1 <- plot(DFsLux, colors="eight", add.data=F)  +
labs(x="Light difference (Lux)", y ="Dissimilarity", title ="") +
theme_classic(base_size = 18) +
theme(panel.grid.minor = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(legend.position = "none") +
labs(subtitle = "(b)") +
theme(plot.subtitle = element_text(size = 20, face = "bold")) +
theme(plot.subtitle = element_text(hjust = -0.13))
D1
DFsMoon <- ggpredict(betaDMod, terms = c("MoonIndexD", "LeqD"), back.transform =F, type ="fe")
M1 <- plot(DFsMoon, colors="eight", add.data=F)  +
labs(x="Moonlight difference", y ="Dissimilarity", title ="") +
theme_classic(base_size = 18) +
theme(panel.grid.minor = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(legend.position = "none") +
labs(subtitle = "(c)") +
theme(plot.subtitle = element_text(size = 20, face = "bold")) +
theme(plot.subtitle = element_text(hjust = -0.13))
M1
C1 / D1 / M1
C1 / D1 / M1
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(vegan)
library(vegan3d)
library(multcomp)
library(lme4)
library(performance)
library(MuMIn)
library(blmeco)
library(matrixStats)
library(ecodist)
library(MASS)
library(rgl)
library(ggeffects)
library(patchwork)
options(na.action = "na.fail")
d <- read.csv("Data/CamSppBin2.csv", header=TRUE)
head(d)
# how many zeros per treatment
d_zero <- subset(d, d$rich < 1)     # Very few zeroes now, only 4 cameras
d_zero
# cameras with zero detections cannot be included
d2 <- subset(d, d$rich > 0)
# how many non zero cameras are left per treatment?
sapply(split(d2$Treatment, d2$Treatment), length) # slightly fewer cameras at combined and light treatments
rankindex(d2$Lux, d2[2:24],indices = c("euclidean", "manhattan", "gower", "altGower", "canberra", "clark", "kulczynski", "horn", "binomial", "jaccard", "bray"))
# for lux: euclidean, manhattan, gower, binomial, altGower, canberra
# for laeq: kulczynski, altGower, canberra, clark, horn, jaccard, bray
# for treatment: euclidean, manhattan, gower, binomial, jaccard
betaD1 <-vegdist(d2[2:24], method ="gower", binary=TRUE) # for Treatment model
betaD2 <-vegdist(d2[2:24], method ="altGower", binary=TRUE) # for Lux/LAeq model
adonis2(betaD2 ~ Lux*Laeq +
Lux +
Laeq +
mIndex +
Landcover +
JDay,
strata = d2$Cluster,
by = "margin", data = d2)
leqD <- dist(d2$Laeq)
luxD <- dist(d2$Lux)
mIndexD <- dist(d2$mIndex)
JDayD <- dist(d2$JDay)
betaDv <- c(betaD2)
envD <- data.frame(c(leqD),c(luxD),c(JDayD), c(mIndexD), betaDv)
names(envD) <- c("LeqD", "LuxD", "JDayD", "MoonIndexD", "betaDdf")
betaDMod <- lm(betaDdf ~ LeqD* LuxD + JDayD + MoonIndexD, data = envD)
summary(betaDMod)
DFsdB <- ggpredict(betaDMod, terms = c("LeqD", "LuxD"), back.transform =F, type ="fe")
C1 <- plot(DFsdB, colors="eight", add.data=F)  +
labs(x="Sound difference (dB)", y ="Dissimilarity", title ="") +
theme_classic(base_size = 18) +
theme(panel.grid.minor = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(legend.position = "none") +
labs(subtitle = "(a)") +
theme(plot.subtitle = element_text(size = 20, face = "bold")) +
theme(plot.subtitle = element_text(hjust = -0.13))
C1
DFsLux <- ggpredict(betaDMod, terms = c("LuxD", "LeqD"), back.transform =F, type ="fe")
D1 <- plot(DFsLux, colors="eight", add.data=F)  +
labs(x="Light difference (Lux)", y ="Dissimilarity", title ="") +
theme_classic(base_size = 18) +
theme(panel.grid.minor = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(legend.position = "none") +
labs(subtitle = "(b)") +
theme(plot.subtitle = element_text(size = 20, face = "bold")) +
theme(plot.subtitle = element_text(hjust = -0.13))
D1
DFsMoon <- ggpredict(betaDMod, terms = c("MoonIndexD", "LeqD"), back.transform =F, type ="fe")
M1 <- plot(DFsMoon, colors="eight", add.data=F)  +
labs(x="Moonlight difference", y ="Dissimilarity", title ="") +
theme_classic(base_size = 18) +
theme(panel.grid.minor = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(legend.position = "none") +
labs(subtitle = "(c)") +
theme(plot.subtitle = element_text(size = 20, face = "bold")) +
theme(plot.subtitle = element_text(hjust = -0.13))
M1
DFsMoon <- ggpredict(betaDMod, terms = c("MoonIndexD", "LeqD"), back.transform =F, type ="fe")
M1 <- plot(DFsMoon, colors="eight", add.data=F)  +
labs(x="Moonlight difference", y ="Dissimilarity", title ="") +
theme_classic(base_size = 36) +
theme(panel.grid.minor = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(legend.position = "none") +
labs(subtitle = "(c)") +
theme(plot.subtitle = element_text(size = 36, face = "bold")) +
theme(plot.subtitle = element_text(hjust = -0.13))
M1
DFsLux <- ggpredict(betaDMod, terms = c("LuxD", "LeqD"), back.transform =F, type ="fe")
D1 <- plot(DFsLux, colors="eight", add.data=F)  +
labs(x="Light difference (Lux)", y ="Dissimilarity", title ="") +
theme_classic(base_size = 36) +
theme(panel.grid.minor = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(legend.position = "none") +
labs(subtitle = "(b)") +
theme(plot.subtitle = element_text(size = 36, face = "bold")) +
theme(plot.subtitle = element_text(hjust = -0.13))
D1
DFsdB <- ggpredict(betaDMod, terms = c("LeqD", "LuxD"), back.transform =F, type ="fe")
C1 <- plot(DFsdB, colors="eight", add.data=F)  +
labs(x="Sound difference (dB)", y ="Dissimilarity", title ="") +
theme_classic(base_size = 36) +
theme(panel.grid.minor = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(legend.position = "none") +
labs(subtitle = "(a)") +
theme(plot.subtitle = element_text(size = 36, face = "bold")) +
theme(plot.subtitle = element_text(hjust = -0.13))
C1
C1 / D1 / M1
C1 / D1 / M1
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(vegan)
library(vegan3d)
library(multcomp)
library(lme4)
library(performance)
library(MuMIn)
library(blmeco)
library(matrixStats)
library(ecodist)
library(MASS)
library(rgl)
library(ggeffects)
options(na.action = "na.fail")
d <- read.csv("Data/CamTaxaBinary2.csv", header=TRUE)
head(d)
# how many zeros per treatment
d_zero <- subset(d, d$rich < 1)     # No cameras w/ 0 detections
d_zero
